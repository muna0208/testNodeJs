1.Express 란 ?
    Express.js는 Node.js를 위한 빠르고 간편한 웹 프레임워크 입니다.
    다양한 웹프레이워크가 존재하지만 현재 가장 많이 사용되는 것이 바로 Express Engine입니다.
    Express.js는 Node.js의 핵심모듈 HTTP 와 Connect 컴포넌트를 기반으로 하는 웹프레임워크로 
    그러한 컴포넌트를 미들웨어(middleWare)라고 하며, 설정보다는 관례(convention over configuration)
    같은 프레임워크의 철학을 지탱하는 주춧돌에 해당합니다.
    쉽게말해서, Node.js 개발시 개발을 빠르고 손쉽게 할 수 있도록 도와주는 역할을 해줍니다. 
    이것은 미들웨어(middleWare) 구조 때문에 가능한것이고, 
    자바스크립트코드로 작성된 다양한 기능의 미들웨어는 개발자가 필요한것만 가지고 익스프레스를 결합해 사용할 수 있습니다.


익스프레스 JS 기초(expressjs.com)
- 어플리케이션: 
    익스프레스 인스턴스를 어플리케이션이라 한다.
    서버에 필요한 기능인 미들웨어를 어플리케이션에 추가한다.
    라우팅 설정을 할 수 있다.
    서버를 요청 대기 상태로 만들수 있다.

- 미들웨어
    미들웨어는 함수들의 연속이다.
    로깅 미들웨어를 만들어 보자
    써드파티 미들웨어를 사용해 보자
    일반 미들웨어 VS 에러 미들웨어
    404, 500 에러 미들웨어를 만들어 보자.

- 라우팅
    요청 url에 대해 적절한 핸들러 함수로 연결해 주는 기능을 라우팅이라고 부른다.
    어플리케이션의 get(), port() 메소드로 구현할 수 있다.
    라우팅을 위한 전용 Router 클래스를 사용할 수 있다.


- 요청객체
    클라이언트 요청 정보를 담은 객체를 요청(Request)객체라 한다.
    http 모듈의 request 객체를 래핑한 것이다.
    req.params(), req.query(), req.body() 메소드를 주로 사용한다.


- 응답객체
    클라이언트 응답 정보를 담은 객체를 응답(Request)객체라고 한다.
    http 모듈의 response 객체를 래핑한 것이다.
    res.send(), res.status(), res.json() 메소드를 주로 사용한다.
    

